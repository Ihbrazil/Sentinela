unit STL100P2T;

{Mostrar Mensagens Visuais}

{Unidade responsável pela apresentação da Mensagem Visual correspondente a
Velocidade da Digitação}

interface

uses
  Windows, ExtCtrls, Gauges, StdCtrls, Controls,
  Classes, Messages, SysUtils, Graphics, Forms, Dialogs, ComCtrls,
  jpeg, Buttons;

type
  TFRMmostrarmensagens = class(TForm)
    PNLmensagem: TPanel;
    IMGsinalamarelo: TImage;
    IMGsinalverde: TImage;
    IMGsinalvermelho: TImage;
    procedure IMGsinalvermelhoClick(Sender: TObject);
    procedure IMGsinalverdeClick(Sender: TObject);
    procedure IMGsinalamareloClick(Sender: TObject);
    procedure PNLvelocidadedigitacaoClick(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure FormCloseQuery(Sender: TObject; var CanClose: Boolean);
    procedure FormCreate(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FRMmostrarmensagens: TFRMmostrarmensagens;
  S_Topo : string[3];
  S_Esquerda: string[4];
  Topo, Esquerda: integer;
  posicao : Text; {Variável interna de arquivo texto}

implementation

uses STL100P3T;

{$R *.DFM}

procedure TFRMmostrarmensagens.IMGsinalvermelhoClick(Sender: TObject);
begin
    FRMmostrarmensagens.Visible := False;
end;

procedure TFRMmostrarmensagens.IMGsinalverdeClick(Sender: TObject);
begin
    FRMmostrarmensagens.Visible := False;
end;

procedure TFRMmostrarmensagens.IMGsinalamareloClick(Sender: TObject);
begin
    FRMmostrarmensagens.Visible := False;
end;

procedure TFRMmostrarmensagens.PNLvelocidadedigitacaoClick(
  Sender: TObject);
begin
    FRMmostrarmensagens.Visible := False;
end;

procedure TFRMmostrarmensagens.FormShow(Sender: TObject);
begin
     if FRMtelaapresentacao.Visible then
        begin
           FRMtelaapresentacao.Close;
           FRMtelaapresentacao.Free;
        end;

     FRMmostrarmensagens.IMGsinalverde.Visible := True;
     FRMmostrarmensagens.IMGsinalamarelo.Visible := False;
     FRMmostrarmensagens.IMGsinalvermelho.Visible := False;
     FRMmostrarmensagens.PNLmensagem.Color := clGreen;

     FRMmostrarmensagens.Show;
end;

procedure TFRMmostrarmensagens.FormCloseQuery(Sender: TObject;
  var CanClose: Boolean);
begin
    Topo := abs(FRMmostrarmensagens.Top);
    Esquerda := abs(FRMmostrarmensagens.Left);
    S_Topo := intToStr(Topo);
    S_Esquerda := intToStr(Esquerda);

//    ShowMessage('Topo 1' + S_Topo);
//    ShowMessage('S_Esquerda 1' + S_Esquerda);

    if length(S_Topo)= 2 then
        S_Topo := '0' + S_Topo
    else if length(S_Topo)= 1 then
        S_Topo := '00' + S_Topo;
    if length(S_Esquerda)= 3 then
        S_Esquerda := '0' + S_Esquerda
    else if length(S_Esquerda)= 2 then
        S_Esquerda := '00' + S_Esquerda
    else if length(S_Esquerda)= 1 then
        S_Esquerda := '000' + S_Esquerda;
{Leitura de arquivo}
     AssignFile(posicao,'PosiTela.txt');
     {$I-}
     reset(posicao);
     if ioresult = 0 then
        begin
           rewrite(posicao);
           write(posicao,S_Topo,S_Esquerda);
        end;
     {$I+}
     CloseFile(posicao);
end;

procedure TFRMmostrarmensagens.FormCreate(Sender: TObject);
begin
{inicialização de variáveis}
     S_Topo := IntToStr(604);
     S_Esquerda:= IntToStr(1124);
{Leitura de arquivo}
     AssignFile(posicao,'PosiTela.txt');
     {$I-}
     reset(posicao);
     if ioresult = 0 then
        begin
           read(posicao,S_Topo,S_Esquerda);
           if (S_Topo <> '999') or (S_Esquerda <> '9999') then
              begin
                FRMmostrarmensagens.Top := StrToInt(S_Topo);
                FRMmostrarmensagens.Left := StrToInt(S_Esquerda);
              end;
        end
     else
        begin
           rewrite(posicao);
           write(posicao,S_Topo,S_Esquerda);
        end;
     {$I+}
     CloseFile(posicao);
end;

end.
